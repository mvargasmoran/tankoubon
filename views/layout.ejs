<!DOCTYPE html>
<html>
<head>
  <title>New Sails App</title>

  <!-- Viewport mobile tag for sensible mobile support -->
  <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

  
    <!--  
        Stylesheets and Preprocessors
        ==============================

        You can always bring in CSS files manually with `<link>` tags, or asynchronously
        using a solution like AMD (RequireJS).  Or, if you like, you can take advantage 
        of Sails' conventional asset pipeline (boilerplate Gruntfile).

        By default, stylesheets from your `assets/styles` folder are included
        here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
        are supported. In production, your styles will be minified and concatenated into
        a single file.
        
        To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:
            
            + Change the order of your CSS files
            + Import stylesheets from other directories
            + Use a different or additional preprocessor, like SASS, SCSS or Stylus
          -->

          <!--STYLES-->
          <link rel="stylesheet" href="/styles/importer.css">
          <!--STYLES END-->

          <style>
            
            html, body {
              width: 100%;
              height: 100%;
              padding: 0;
              display: block;
              margin: 0px;
              font-family: helvetica;
              background-color: RGBA(63, 63, 63, 1);
            }

            #alerts{
              border: 1px solid silver;
              background-color: rgba(220, 220, 220, 0.5);
              color: #eee;

              font-size: 28px;
              text-shadow: 1px 1px 1px black, -1px -1px 1px black, 1px -1px 1px black, -1px 1px 1px black, 0px 0px 20px rgba(0,0,0,0.5), 0px 0px 10px rgba(0,0,0,0.5), 0px 0px 5px rgba(0,0,0,0.5);

              padding: 1em;
              position: fixed;
              top: 10px;
              left: 25%;
              right: 25%;
              text-align: center;
            }

            img.paged-image{
              height:100%; 
              width:auto; 
              vertical-align: top;

              display: block;
              margin: 0 auto;
              display: none;

            }

            ul#thumbs{
              text-decoration: none;
              list-style: none;
              margin: auto;
              display: block;
              padding: 0px;
              background-color: RGBA(40, 40, 40, 1);
            }


            #thumbs{
              position: fixed;
              top: 26px;
              left: 1px;

              width: 130px;
              height: 97%;
              overflow-y: scroll;

              transition: 0.3s all ease-in-out;

              background-color: rgba(240,240,240,0.95);
              opacity: 0;

              text-align: center;
              vertical-align: middle;
            }

            .thumb-page{
              border: 1px solid black;
              margin: 2px;  
            }

            .current-thumb .thumb-image{
              border: 3px solid #0184F8;
              opacity: 0.9;
            }


            .current-thumb{
            }

            .thumb-label{
              position: absolute;
              color: white;
              background-color: rgba(0,0,0,1);
              padding: 4%;
              border-radius: 2px;
              font-size: 20px;
              margin: 50%;
            }

            .thumb-image{
              opacity: 0.3;
              width: 100px;
              height: auto;
            }

            .thumb-image:hover{
              opacity: 0.9;
            }

            /* CSS controls */

            #toggler{
              display: none;
            }

            #toggler:checked + #thumbs{
              display: block;
              opacity: 1;

            }


            #toggler-label{
              transition: 0.3s all ease-in-out;
              color: #333;
              position: fixed;
              left: 0px;
              top: 0px;

              height: 26px;
              width: 26px;

              display: table-cell;

              background-color: orchid;

              text-align: center;
              vertical-align: middle;
              font-size: 18px;
              border: 1px solid hotpink;
            }





          </style>
        </head>

        <body>
          <% if (typeof error!== 'undefined') { %>
          <%= error %>
          <% } else { %>

          <%- body %>

          <% } %>

    <!--
        Client-side Templates
        ========================

        HTML templates are important prerequisites of modern, rich client applications.
        To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
        that you load these templates client-side.

        By default, your Gruntfile is configured to automatically load and precompile
        client-side JST templates in your `assets/templates` folder, then
        include them here automatically (between TEMPLATES and TEMPLATES END).
        
        To customize this behavior to fit your needs, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Import templates from other directories
            + Use a different template engine (handlebars, jade, dust, etc.)
            + Internationalize your client-side templates using a server-side
              stringfile before they're served.
            -->

            <!--TEMPLATES-->
            
            <!--TEMPLATES END-->


    <!--

      Client-side Javascript
      ========================

      You can always bring in JS files manually with `script` tags, or asynchronously
      on the client using a solution like AMD (RequireJS).  Or, if you like, you can 
      take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

      By default, files in your `assets/js` folder are included here
      automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
      CoffeeScript (.coffee) are supported. In production, your scripts will be minified
      and concatenated into a single file.
      
      To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
      For example, here are a few things you could do:
          
          + Change the order of your scripts
          + Import scripts from other directories
          + Use a different preprocessor, like TypeScript

        -->

        <script src="/js/dependencies/sails.io.js"></script>
        <script src="/js/dependencies/vue.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/vue-resource/0.1.17/vue-resource.min.js"></script>
        <script src="/js/app/app.js"></script>


      </body>
      </html>
